name: CI

on:
  push:
    branches: [main, staging, develop]
  pull_request:
    branches: [main, staging]

env:
  UV_CACHE_DIR: /tmp/.uv-cache

jobs:
  test-backend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install UV
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.local/bin" >> $GITHUB_PATH
    
    - name: Set up Python
      run: uv python install 3.11
    
    - name: Restore UV cache
      uses: actions/cache@v4
      with:
        path: /tmp/.uv-cache
        key: uv-${{ runner.os }}-${{ hashFiles('gastropartner-backend/uv.lock') }}
        restore-keys: |
          uv-${{ runner.os }}-
    
    - name: Install dependencies
      working-directory: ./gastropartner-backend
      run: |
        uv venv
        uv sync --all-extras --frozen
    
    - name: Run tests with coverage
      working-directory: ./gastropartner-backend
      run: uv run pytest --cov=src --cov-report=xml --cov-report=term-missing
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./gastropartner-backend/coverage.xml
        flags: backend
        name: backend-coverage
      
    - name: Run linting
      working-directory: ./gastropartner-backend
      run: |
        uv run ruff check . --output-format=github
        uv run ruff format --check .
    
    - name: Run type checking
      working-directory: ./gastropartner-backend
      run: uv run mypy src/ --junit-xml=mypy-results.xml
    
    - name: Minimize UV cache
      run: uv cache prune

  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: gastropartner-frontend/package-lock.json
    
    - name: Install dependencies
      working-directory: ./gastropartner-frontend
      run: npm ci
    
    - name: Run ESLint
      working-directory: ./gastropartner-frontend
      run: npm run lint || true  # Continue on lint warnings
    
    - name: Run tests with coverage
      working-directory: ./gastropartner-frontend
      run: npm test -- --coverage --watchAll=false --coverageReporters=text-lcov --coverageReporters=lcov
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./gastropartner-frontend/coverage/lcov.info
        flags: frontend
        name: frontend-coverage
    
    - name: Build production bundle
      working-directory: ./gastropartner-frontend
      run: npm run build
    
    - name: Check bundle size
      working-directory: ./gastropartner-frontend
      run: |
        echo "üì¶ Build completed successfully"
        ls -lh build/static/js/*.js | head -5
        echo "Bundle analysis complete"

  # Security audit for both backend and frontend
  security-audit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Audit backend dependencies
      working-directory: ./gastropartner-backend
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.local/bin" >> $GITHUB_PATH
        uv python install 3.11
        uv venv
        uv sync --all-extras --frozen
        uv run pip-audit || echo "‚ö†Ô∏è  Backend security audit completed with warnings"
    
    - name: Setup Node.js for frontend audit
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Audit frontend dependencies
      working-directory: ./gastropartner-frontend
      run: |
        npm audit --audit-level=high || echo "‚ö†Ô∏è  Frontend security audit completed with warnings"